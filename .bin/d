#!/bin/bash

# Silly daemon service starter wrapper thingy

RUNNING="running"
STOPPED="stopped"
RUNNING_MESSAGE="\033[1;42m RUNNING \033[0m"
STOPPED_MESSAGE="\033[1;41m STOPPED \033[0m"

POSTGRES_NOT_RUNNING="pg_ctl: no server running"
MYSQL_NOT_RUNNING=" ERROR! MySQL is not running"

check_status()
{
  if [[ `pgsql.server status` == $POSTGRES_NOT_RUNNING ]]; then
    pg_status=$STOPPED
  else
    pg_status=$RUNNING
  fi

  if [[ `mysql.server status` == $MYSQL_NOT_RUNNING ]]; then
    mysql_status=$STOPPED
  else
    mysql_status=$RUNNING
  fi

  if [[ `ps -elf 2>/dev/null | grep memcached | grep -v 'grep memcached' | wc -l` == '       1' ]]; then
    memcached_status=$RUNNING
  else
    memcached_status=$STOPPED
  fi

  if [[ `ps -elf 2>/dev/null | grep redis-server | grep -v 'grep redis-server' | wc -l` == '       1' ]]; then
    redis_status=$RUNNING
  else
    redis_status=$STOPPED
  fi

  if [[ `ps awx 2>/dev/null | grep elasticsearch | grep -v 'grep elasticsearch' | wc -l` == '       1' ]]; then
    elastic_status=$RUNNING
  else
    elastic_status=$STOPPED
  fi
}

postgres_message()
{
  if [[ $pg_status == $RUNNING ]]; then
    echo -e $RUNNING_MESSAGE
  else
    echo -e $STOPPED_MESSAGE
  fi
}

mysql_message()
{
  if [[ $mysql_status == $RUNNING ]]; then
    echo -e $RUNNING_MESSAGE
  else
    echo -e $STOPPED_MESSAGE
  fi
}

memcached_message()
{
  if [[ $memcached_status == $RUNNING ]]; then
    echo -e $RUNNING_MESSAGE
  else
    echo -e $STOPPED_MESSAGE
  fi
}

redis_message()
{
  if [[ $redis_status == $RUNNING ]]; then
    echo -e $RUNNING_MESSAGE
  else
    echo -e $STOPPED_MESSAGE
  fi
}

elastic_message()
{
  if [[ $elastic_status == $RUNNING ]]; then
    echo -e $RUNNING_MESSAGE
  else
    echo -e $STOPPED_MESSAGE
  fi
}

show_status()
{
  check_status
  echo -e "  `postgres_message` postgres"
  echo -e "  `mysql_message` mysql"
  echo -e "  `memcached_message` memcached"
  echo -e "  `redis_message` redis"
  echo -e "  `elastic_message` elastic search"
}

echo "Daemons status:"
echo ""
show_status
echo ""

if [[ $pg_status == $STOPPED ]]; then
  echo "  1 - start postgres server"
else
  echo "  1 - stop postgres server"
fi

if [[ $mysql_status == $STOPPED ]]; then
  echo "  2 - start mysql server"
else
  echo "  2 - stop mysql server"
fi

if [[ $memcached_status == $STOPPED ]]; then
  echo "  3 - start memcached server"
else
  echo "  3 - stop memcached server"
fi

if [[ $redis_status == $STOPPED ]]; then
  echo "  4 - start redis server"
else
  echo "  4 - stop redis server"
fi

if [[ $elastic_status == $STOPPED ]]; then
  echo "  5 - start elastic search"
else
  echo "  5 - stop elastic search"
fi

echo -n "  > "
read opt

if [[ $opt == 1 ]]; then
  if [[ $pg_status == $STOPPED ]]; then
    pgsql.server start
  else
    pgsql.server stop
  fi
  sleep 1
  show_status
fi

if [[ $opt == 2 ]]; then
  if [[ $mysql_status == $STOPPED ]]; then
    mysql.server start
  else
    mysql.server stop
  fi
  sleep 1
  show_status
fi

if [[ $opt == 3 ]]; then
  if [[ $memcached_status == $STOPPED ]]; then
    memcached -d
  else
    killall memcached
  fi
  sleep 1
  show_status
fi

if [[ $opt == 4 ]]; then
  if [[ $redis_status == $STOPPED ]]; then
    redis-server /usr/local/etc/redis.conf &
  else
    #killall redis-server
    kill -9 `ps -e | grep redis-server | grep -v grep | cut -c-6`
  fi
  sleep 1
  show_status
fi

if [[ $opt == 5 ]]; then
  if [[ $elastic_status == $STOPPED ]]; then
    #elasticsearch -D es.config=/usr/local/opt/elasticsearch/config/elasticsearch.yml -p /tmp/elasticsearch.pid
    # brew info elasticsearch
    # elasticsearch --config=/usr/local/opt/elasticsearch/config/elasticsearch.yml > /tmp/elasticsearch.log &
    elasticsearch > /tmp/elasticsearch.log &
  else
    e=`ps awx | grep elasticsearch | grep -v grep | cut -c-6`
    kill -HUP $e
    #killall elasticsearch
  fi
  sleep 1
  show_status
fi

